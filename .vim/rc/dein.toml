[[plugins]]
repo = "Shougo/dein.vim"

[[plugins]]
hook_add = """
augroup colorcshemeSetting
    autocmd!
    colorscheme night-owl
    autocmd VimEnter * ++nested colorscheme night-owl
    autocmd Colorscheme * highlight Normal ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight NonText ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight LineNr ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight Folded ctermbg=NONE guibg=NONE
    autocmd Colorscheme * highlight EndOfBuffer ctermbg=NONE guibg=NONE
augroup END
"""
repo = "haishanh/night-owl.vim"

[[plugins]]
hook_add = "set helplang=ja"
repo = "vim-jp/vimdoc-ja"

[[plugins]]
hook_add = """
let g:lsp_diagnostics_enabled = 1
let g:lsp_doagnostics_echo_cursor = 1
"""
repo = "prabirshrestha/vim-lsp"

[[plugins]]
hook_add = """
let g:lsp_settings = {
\    "efm-langserver": { "disabled": v:false },
\    "pyls-all": {
\       "workspace_config": {
\           "pyls": {
\                "plugins": {
\                   "autopep8": {"enabled": v:false}
\                }
\           }
\       }
\   }
\}
let g:lsp_text_edit_enabled = 1
let g:lsp_diagnostics_signs_error = {'text': 'ðŸ˜¡'}
let g:lsp_diagnostics_signs_warning = {'text': 'ðŸ¤”'}
"""
repo = "mattn/vim-lsp-settings"

[[plugins]]
hook_add = """
inoremap <expr> <C-j> pumvisible() ? "\<C-n>" : "\<C-j>"
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <C-k> pumvisible() ? "\<C-p>" : "\<C-k>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <Enter> pumvisible() ? "\<C-y>" : "\<Enter>"
imap <c-space> <Plug>(asyncomplete_force_refresh)
let g:asyncomplete_auto_completeopt = 1
let g:asyncomplete_matchfuzzy = 1
let g:asyncomplete_auto_popup = 1
"""
repo = "prabirshrestha/asyncomplete.vim"

[[plugins]]
repo = "prabirshrestha/asyncomplete-lsp.vim"

[[plugins]]
repo = "markonm/traces.vim"

[[plugins]]
repo = "jiangmiao/auto-pairs"

[[plugins]]
hook_add = """
let g:lightline = {
     \ "colorscheme": "nightowl", 
     \ "active": {
     \   "left": [ [ "mode", "paste" ],
     \             [ "gitbranch", "readonly", "filename", "modified" ] ]
     \ },
     \ "component_function": {
     \   "gitbranch": "FugitiveHead",
     \   "filetype": "MyFiletype",
     \   "fileformat": "MyFileformat",
     \ },
     \ }
function! MyFiletype()
  return winwidth(0) > 70 ? (strlen(&filetype) ? &filetype . " " . WebDevIconsGetFileTypeSymbol() : "no ft") : ""
endfunction

function! MyFileformat()
  return winwidth(0) > 70 ? (&fileformat . " " . WebDevIconsGetFileFormatSymbol()) : ""
endfunction
"""
repo = "itchyny/lightline.vim"
depends = ["night-owl.vim", "vim-devicons"]

[[plugins]]
hook_add = """
nmap f <Plug>(easymotion-tn)
nmap <Space>j <Plug>(easymotion-j)
nmap <Space>k <Plug>(easymotion-k)
nmap <Space>l <Plug>(easymotion-lineforward)
nmap <Space>h <Plug>(easymotion-linebackward)
let g:EasyMotion_smartcase = 1
let g:EasyMotion_use_smartsign_jp = 1
"""
repo = "easymotion/vim-easymotion"

[[plugins]]
repo = "tomtom/tcomment_vim"

[[plugins]]
repo = "hrsh7th/vim-vsnip"

[[plugins]]
repo = "hrsh7th/vim-vsnip-integ"

[[plugins]]
repo = "junegunn/fzf"
build = "./install --all"
merged = 0

[[plugins]]
repo = "yuki-yano/fzf-preview.vim"
rev = "release/rpc"
hook_add = """
nmap <C-p> [fzf-p]
nnoremap [fzf-p]<C-p> :<C-u>FzfPreviewDirectoryFiles<CR>
nnoremap [fzf-p]c     :<C-u>FzfPreviewCommandPaletteRpc<CR>
nnoremap [fzf-p]<C-g> :<C-u>FzfPreviewGitActionsRpc<CR>
let g:fzf_preview_fzf_preview_window_option = "right:50%"
let g:fzf_preview_use_dev_icons = 1
let g:fzf_preview_dev_icon_prefix_string_length = 3
let g:fzf_preview_dev_icons_limit = 5000
"""

[[plugins]]
repo = "simeji/winresizer"
hook_add = """
let g:winresizer_vert_resize = 3
"""

[[plugins]]
repo = "tpope/vim-surround"

[[plugins]]
repo = "tpope/vim-repeat"

[[plugins]]
repo = "cocopon/vaffle.vim"
hook_add = """
command! TVaffle :tabnew | :Vaffle
"""

[[plugins]]
repo = "vim-denops/denops.vim"
# hook_add = """
# let g:denops#server#service#deno_args = [
# \ "-q",
# \ "--unstable",
# \ "-A",
# \]
# """

[[plugins]]
repo = "Omochice/dps-codic-vim"
depends = ["denops.vim"]

[[plugins]]
repo = "Omochice/dps-charcounter-vim"
depends = ["denops.vim"]

[[plugins]]
repo = "Omochice/dps-slack-status.vim"
depends = ["denops.vim"]
hook_add = """
let g:slack_status_emoji = ":dadparrot:"
"""

[[plugins]]
repo = "kana/vim-textobj-user"

[[plugins]]
repo = "kana/vim-textobj-line"
depends = ["vim-textobj-uesr"]

[[plugins]]
repo = "terryma/vim-expand-region"
hook_add = """
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
"""
depends = ["vim-textobj-user", "vim-textobj-line"]

[[plugins]]
repo = "thinca/vim-quickrun"

[[plugins]]
repo = "tpope/vim-fugitive"

[[plugins]]
repo = "ryanoasis/vim-devicons"
