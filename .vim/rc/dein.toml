[[plugins]]
repo = "Shougo/dein.vim"
hook_add = """
let g:dein#auto_recache = v:true
"""

[[plugins]]
repo = "sainnhe/sonokai"
hook_add = """
augroup colorschemeSetting
    autocmd!
    autocmd VimEnter * nested colorscheme sonokai
augroup END
let g:sonokai_style = 'espresso'
let g:sonokai_enable_italic = v:false
let g:sonokai_disable_italic_comment = v:true
"""

[[plugins]]
repo = "itchyny/lightline.vim"
hook_add = """
set noshowmode
let g:lightline = {
\   'colorscheme': 'sonokai',
\   'active': {
\       'left': [
\           ['mode', 'paste'],
\           ['gitbranch', 'readonly', 'filename', 'modified'],
\       ],
\   },
\   'component_function': {
\       'gitbranch': 'gitbranch#name',
\       'filetype': 'LightlineFileType',
\       'fileformat': 'LightlineFotmat',
\   },
\ }

function! LightlineFileType() abort
    if winwidth(0) > 70
        if strlen(&filetype)
            return &filetype . ' ' . WebDevIconsGetFileTypeSymbol()
        else
            return 'no ft'
        endif
    else
        return ''
    endif
endfunction

function! LightlineFotmat() abort
    if winwidth(0) > 70
        return &fileformat .  ' ' . WebDevIconsGetFileFormatSymbol()
    else
        return ''
    endif
endfunction
"""
depends = ["vim-devicons", 'vim-gitbranch']

[[plugins]]
repo = "itchyny/vim-gitbranch"

[[plugins]]
repo = "vim-jp/vimdoc-ja"
hook_add = """
if has('nvim')
    set helplang=en " default
else
    set helplang=ja
endif
"""

[[plugins]]
repo = "prabirshrestha/vim-lsp"
hook_add = """
let g:lsp_diagnostics_enabled = v:true
let g:lsp_diagnostics_virtual_text_enabled = v:false
let g:lsp_diagnostics_echo_cursor = v:true
let g:lsp_diagnostics_echo_delay = 100
let g:lsp_review_float = v:false
nmap <silent> <C-h> <Plug>(lsp-hover)
nmap <silent> <Space>f <Plug>(lsp-document-format)
nmap <silent> <Space>d <Plug>(lsp-document-diagnostics)
nmap <silent> <Space>r <Plug>(lsp-rename)

let g:lsp_settings = {
\   'efm-langserver': {'disabled': v:false},
\   'html-langserver': {'allowlist': ['html', 'htmldjango']},
\   'taplo-lsp': {'workspace_config': {'formatter' : {'reorderKeys': v:false}}}
\ }
let g:lsp_text_edit_enabled = v:true
let g:lsp_diagnostics_signs_error = {'text': 'ðŸ˜¡'}
let g:lsp_diagnostics_signs_warning = {'text': 'ðŸ¤”'}
"""

[[plugins]]
repo = "mattn/vim-lsp-settings"
depends = "vim-lsp"

[[plugins]]
repo = "kana/vim-repeat"

[[plugins]]
repo = "ryanoasis/vim-devicons"

[[plugins]]
repo = "lambdalisue/seethrough.vim"
hook_add = """
let g:seethrough_disabled = v:false
"""

[[plugins]]
repo = "mattn/vim-findroot"
hook_add = """
let g:findroot_not_for_subdir = v:false
"""

[[plugins]]
repo = "cocopon/vaffle.vim"
hook_add = """
cnoreabbrev va Vaffle
command! TVaffle tabnew | Vaffle
augroup vaffle_startup_internal
    autocmd!
    autocmd StdinReadPre * let s:std_in = v:true
    autocmd VimEnter * if argc() == 0 && !exists('s:std_in') | Vaffle | endif
augroup END

" if load this plugin, use vaffle instead of netrw
let g:loaded_netrw             = v:true
let g:loaded_netrwPlugin       = v:true
let g:loaded_netrwSettings     = v:true
let g:loaded_netrwFileHandlers = v:true
"""

[[plugins]]
# FIXME
# If set this plugin as lazy,
# "Lazygit" is not found on second or later execution.
# on_cmd = ["Lazygit"]
repo = "voldikss/vim-floaterm"
hook_add = """
command! Lazygit FloatermNew --autoclose=2 --height=1.0 --width=1.0 --title=lazygit lazygit
command! Fkill FloatermKill
nnoremap <C-g> <Cmd>Lazygit<CR>
if has('nvim')
  tnoremap <expr> <ESC> &filetype ==# 'floaterm' ? '<ESC>' : '<C-\><C-n>'
else
  tnoremap <expr> <ESC> &filetype ==# 'floaterm' ? '<ESC>' : '<C-W>N'
endif
"""
