[[plugins]]
repo = "Shougo/dein.vim"

[[plugins]]
repo = "haishanh/night-owl.vim"
hook_add = """
colorscheme night-owl

function! DefineHighlights()
    if g:colors_name is "night-owl"
        highlight Normal ctermbg=NONE
        highlight NonText ctermbg=NONE
        highlight LineNr ctermbg=NONE
        highlight Folded ctermbg=NONE
        highlight EndOfBuffer ctermbg=NONE
    endif
endfunction

augroup colorcshemeSetting
    autocmd!
    autocmd ColorScheme * :call DefineHighlights()
augroup END
"""

[[plugins]]
repo = "vim-jp/vimdoc-ja"
hook_add = "set helplang=ja"

[[plugins]]
repo = "prabirshrestha/vim-lsp"
hook_add = """
let g:lsp_diagnostics_enabled = 1
let g:lsp_doagnostics_echo_cursor = 1
"""
depends = "asyncomplete-lsp.vim"

[[plugins]]
repo = "mattn/vim-lsp-settings"
hook_add = """
let g:lsp_settings = {
\    "efm-langserver": {"disabled": v:false},
\}
let g:lsp_text_edit_enabled = 1
let g:lsp_diagnostics_signs_error = {"text": "ðŸ˜¡"}
let g:lsp_diagnostics_signs_warning = {"text": "ðŸ¤”"}
"""
depends = "vim-lsp"

[[plugins]]
repo = "prabirshrestha/asyncomplete.vim"
hook_add = """
"imap <C-space> <Plug>(asyncomplete_force_refresh)
let g:asyncomplete_auto_completeopt = 1
let g:asyncomplete_matchfuzzy = 1
let g:asyncomplete_auto_popup = 1
"""

[[plugins]]
repo = "prabirshrestha/asyncomplete-lsp.vim"
depends = "asyncomplete.vim"

[[plugins]]
repo = "markonm/traces.vim"

[[plugins]]
repo = "cohama/lexima.vim"
hook_add = """ 
" too lang to write here
source ~/.vim/mysettings/lexima.vim
inoremap <expr> <C-j> pumvisible() ? "\<C-n>" : "\<C-j>"
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : lexima#expand("<LT>Tab>","i")
inoremap <expr> <C-k> pumvisible() ? "\<C-p>" : "\<C-k>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : lexima#expand("<LT>CR>", "i")
"""
marged = 0


[[plugins]]
repo = "itchyny/lightline.vim"
hook_add = """
let g:lightline = {
\    "colorscheme": "nightowl", 
\    "active": {
\        "left": [
\            ["mode", "paste"],
\            ["gitbranch", "readonly", "filename", "modified"] 
\        ]
\    },
\    "component_function": {
\        "gitbranch": "LightlineFugitive",
\        "filetype": "LightlineFt",
\        "fileformat": "LightlineFotmat",
\    },
\ }
function! LightlineFt()
    return winwidth(0) > 70 ? (strlen(&filetype) ? &filetype . " " . WebDevIconsGetFileTypeSymbol() : "no ft") : ""
endfunction

function! LightlineFotmat()
    return winwidth(0) > 70 ? (&fileformat . " " . WebDevIconsGetFileFormatSymbol()) : ""
endfunction

function LightlineFugitive()
    if exists("*FugitiveHead")
        let branch = FugitiveHead()
        return branch !=# "" ? "ï‡“" . " " . branch : ""
    endif
    return ""
endfunction
"""
depends = ["night-owl.vim", "vim-devicons", "vim-fugitive"]

[[plugins]]
repo = "easymotion/vim-easymotion"
hook_add = """
nmap f <Plug>(easymotion-tn)
nmap <Space>j <Plug>(easymotion-j)
nmap <Space>k <Plug>(easymotion-k)
nmap <Space>l <Plug>(easymotion-lineforward)
nmap <Space>h <Plug>(easymotion-linebackward)
let g:EasyMotion_smartcase = 1
let g:EasyMotion_use_smartsign_jp = 1
"""

[[plugins]]
repo = "tyru/caw.vim"

[[plugins]]
repo = "Shougo/context_filetype.vim"
depends = ["caw.vim"]

[[plugins]]
repo = "hrsh7th/vim-vsnip"
hook_add = """
let g:vsnip_snippet_dir = $HOME .. "/.vim/snippets/"
"""

[[plugins]]
repo = "hrsh7th/vim-vsnip-integ"
depends = ["vim-vsnip", "asyncomplete.vim"]

[[plugins]]
repo = "junegunn/fzf"
build = "./install --all"
merged = 0

[[plugins]]
repo = "yuki-yano/fzf-preview.vim"
rev = "release/rpc"
hook_add = """
nmap <C-p> [fzf-p]
nnoremap [fzf-p]<C-p> :<C-u>FzfPreviewDirectoryFiles<CR>
nnoremap [fzf-p]c     :<C-u>FzfPreviewCommandPaletteRpc<CR>
nnoremap [fzf-p]<C-g> :<C-u>FzfPreviewGitActionsRpc<CR>
let g:fzf_preview_fzf_preview_window_option = "right:50%"
let g:fzf_preview_use_dev_icons = 1
let g:fzf_preview_dev_icon_prefix_string_length = 3
let g:fzf_preview_dev_icons_limit = 5000
"""

[[plugins]]
repo = "simeji/winresizer"
hook_add = """
let g:winresizer_vert_resize = 3
"""

# [[plugins]]
# repo = "tpope/vim-surround"

# [[plugins]]
# repo = "tpope/vim-repeat"
# depends = "vim-surround"

[[plugins]]
repo = "machakann/vim-sandwich"
hook_add = """
" use with surround's keybinding. 
" may be useful vim and vscode(surround with vscodevim).
execute("source " . g:dein_dir . "/repos/github.com/machakann/vim-sandwich/macros/sandwich/keymap/surround.vim")
"""

[[plugins]]
repo = "cocopon/vaffle.vim"
hook_add = """
command! TVaffle :tabnew | :Vaffle
"""

[[plugins]]
repo = "vim-denops/denops.vim"
# hook_add = """
# let g:denops#server#service#deno_args = [
# \ "-q",
# \ "--unstable",
# \ "-A",
# \]
# """

[[plugins]]
repo = "Omochice/dps-codic-vim"
depends = ["denops.vim"]

[[plugins]]
repo = "yuki-yano/dps-slack-status.vim"
depends = ["denops.vim"]
hook_add = """
let g:slack_status_emoji = ":dadparrot:"
"""

[[plugins]]
repo = "kana/vim-textobj-user"

[[plugins]]
repo = "kana/vim-textobj-line"
depends = ["vim-textobj-uesr"]

[[plugins]]
repo = "terryma/vim-expand-region"
hook_add = """
vmap v <Plug>(expand_region_expand)
vmap V <Plug>(expand_region_shrink)
"""
depends = ["vim-textobj-user", "vim-textobj-line"]

[[plugins]]
repo = "thinca/vim-quickrun"
hook_add = """
nnoremap <Space>q :<C-u>QuickRun<CR>
"""

[[plugins]]
repo = "tpope/vim-fugitive"

[[plugins]]
repo = "ryanoasis/vim-devicons"

[[plugins]]
repo = "voldikss/vim-floaterm"
hook_add = """
command! Lazygit :FloatermNew --autoclose=2 --height=0.9 --width=0.85 --title=lazygit lazygit
"""
