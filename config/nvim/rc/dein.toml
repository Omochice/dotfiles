hook_add = """
function s:disable_bgcolor() abort
  highlight FloatBorder ctermbg=NONE guibg=NONE
  highlight NormalFloat ctermbg=NONE guibg=NONE
  highlight Special ctermbg=NONE guibg=NONE
  highlight link TreesitterContext Pmenu
endfunction

augroup vimrc#colorsetting
  autocmd!
  autocmd ColorScheme * call timer_start(0, { -> s:disable_bgcolor() })
  autocmd VimEnter * nested colorscheme sonokai
augroup END
"""

[[plugins]]
repo = "Shougo/dein.vim"

[[plugins]]
repo = "tani/vim-artemis"

[[plugins]]
repo = "sainnhe/sonokai"
hook_add = """
let g:sonokai_style = 'espresso'
let g:sonokai_dim_inactive_windows = v:false
let g:sonokai_enable_italic = v:false
let g:sonokai_disable_italic_comment = v:true
"""

[[plugins]]
repo = "catppuccin/vim"
name = "catpuccin"
hook_add = """
augroup erace-cursorline
  autocmd!
"  autocmd ColorScheme * highlight CursorLine guisp=NONE guifg=NONE guibg=NONE ctermfg=NONE ctermbg=NONE gui=NONE cterm=NONE
augroup END
"""

[[plugins]]
repo = "itchyny/lightline.vim"
lua_add = """
local vimx = require("artemis")

vimx.go.showmode = false

vimx.g.lightline = {
  colorscheme = "default",
  active = {
    left = {
      { "mode", "paste" },
      { "gitbranch", "readonly", "filename", "modified" },
    },
  },
  component_function = {
    gitbranch = "gitbranch#name",
    filetype = "LightlineFileType",
    fileformat = "LightlineFormat",
  },
}
local group = vimx.create_augroup(
  "vimrc#ligjtline-update-highlight",
  { clear = true }
)
vimx.create_autocmd(
  "ColorScheme",
  {
    pattern = "*",
    group = group,
    callback = function()
      -- タイミングかなんかの問題かluaだとうまくいかんので
      vimx.cmd("let g:lightline.colorscheme = g:colors_name")
      -- vimx.g.lightline.colorscheme = vimx.g.colors_name
      vimx.fn.lightline.disable()
      vimx.fn.lightline.enable()
    end
  }
)
"""
hook_add = """
function! LightlineFileType() abort
  if winwidth(0) <= 70
    return ''
  endif
  if strlen(&filetype) ==# 0
    return 'no ft'
  endif
  return printf('%s %s', &filetype, nerdfont#find())
endfunction

function! LightlineFormat() abort
  if winwidth(0) <= 70
    return ''
  endif
    return printf('%s %s', &fileformat, nerdfont#fileformat#find())
endfunction
"""
depends = ["nerdfont.vim", 'vim-gitbranch']

[[plugins]]
repo = "itchyny/vim-gitbranch"

[[plugins]]
repo = "vim-jp/vimdoc-ja"
hook_add = """
if has('nvim')
  set helplang=en " default
else
  set helplang=ja
endif
"""

[[plugins]]
repo = "lambdalisue/nerdfont.vim"

[[plugins]]
repo = "lambdalisue/seethrough.vim"
hook_add = """
let g:seethrough_disabled = has('gui_running')
"""

[[plugins]]
repo = "mattn/vim-findroot"
hook_add = """
let g:findroot_not_for_subdir = v:false
"""

# [[plugins]]
# repo = "vim-jp/vim-streem"

[[plugins]]
repo = "vim-scripts/fish.vim"

# [[plugins]]
# repo = "mityu/vim-applescript"
