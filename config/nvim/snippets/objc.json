{
  "for": {
    "prefix": [
      "for"
    ],
    "body": [
      "for (${1:<type>} *${2:<var>} = ${3:<from>}; ${2:<var>} < ${4:<to>}; ${2:<var>}++) {",
      "\t$0",
      "}"
    ],
    "description": "for loop"
  },
  "for-range": {
    "prefix": [
      "forof"
    ],
    "body": [
      "for (${1:<type>} *${2:<var>} in ${3:<from>}) {",
      "\t$0",
      "}"
    ],
    "description": "for range loop"
  },
  "if": {
    "prefix": "if",
    "body": [
      "if (${1:<condition>}) {",
      "\t$0",
      "}"
    ],
    "description": "if statement"
  },
  "echo": {
    "prefix": [
      "echo",
      "debug"
    ],
    "body": [
      "NSLog(@\"%@$1\", ${2:<var>});"
    ],
    "description": "print debug snippet"
  },
  "class interface": {
    "prefix": [
      "interface",
      "class"
    ],
    "body": [
      "@interface ${1:<class-name>} : ${2:<super-class>}",
      "- (id)init;",
      "- (<return-type>)<instance-method-name>",
      "+ (<return-type>)<class-method-name>",
      "",
      "@property <type> <property-name>",
      "@end"
    ],
    "description": "description"
  },
  "implementation": {
    "prefix": [
      "implementation"
    ],
    "body": [
      "@implementation ${1:<class-name>}",
      "{",
      "\t<type> <instance-variable>;",
      "}",
      "",
      "- (${2:<return-type>})${3:<instance-method-name>} {;}",
      "+ (<return-type>)<class-method-name> {;}",
      "@end"
    ],
    "description": "class implementation"
  },
  "define method": {
    "prefix": "method",
    "body": [
      "- (${1:<return-type>})${2:<method-name>} {",
      "\t$0;",
      "}"
    ],
    "description": "implementation method"
  },
  "define method with args": {
    "prefix": "argMethod",
    "body": [
      "- (${1:<return-type>})${2:<method-name>}:(${3:<arg-type>})${4:<arg-name>} ${5:<key-name>}:(${6:<type>})${7:<arg-name>} {",
      "\t$0;",
      "}"
    ],
    "description": "implementation method with args"
  },
  "category": {
    "prefix": "interface-category",
    "body": [
      "@interface ${1:<class-name>} (${2:<category-name>})",
      "- (id)init;",
      "- (<return-type>)<instance-method-name>",
      "+ (<return-type>)<class-method-name>",
      "",
      "@property <type> <property-name>",
      "@end"
    ],
    "description": "interface with category"
  }
}
