{
  "main": {
    "prefix": "main",
    "body": [
      "if (import.meta.main) {",
      "\t$1",
      "}"
    ],
    "description": "main function"
  },
  "function": {
    "prefix": "fn",
    "body": [
      "function ${1:name}(${2:args}): ${3:void} {",
      "\t$0",
      "}"
    ],
    "description": "function template"
  },
  "for": {
    "prefix": "for",
    "body": [
      "for (const ${1:item} of ${2:items}) {",
      "\t$0",
      "}"
    ],
    "description": "for loop"
  },
  "for-range": {
    "prefix": "forr",
    "body": [
      "for (let ${1:i} = ${2:start}; ${1:i} < ${3:end}; ${1:i}++) {",
      "\t$0",
      "}"
    ],
    "description": "for range loop"
  },
  "if": {
    "prefix": "if",
    "body": [
      "if (${1:condition}) {",
      "\t$0",
      "}"
    ],
    "description": "if statement"
  },
  "echo": {
    "prefix": [
      "echo",
      "debug"
    ],
    "body": [
      "console.log(`{$1=}`)"
    ],
    "description": "print debug snippet"
  },
  "enum": {
    "prefix": "enum",
    "body": [
      "const ${1:name} = {",
      "",
      "} as const",
      "type ${1:name} = typeof ${1:name}[keyof typeof ${1:name}]"
    ],
    "description": "enum template"
  },
  "enumkey": {
    "prefix": "ekey",
    "body": [
      "${1}: \"${1}\","
    ],
    "description": "enumkey shorthand"
  },
  "promise": {
    "prefix": "promise",
    "body": [
      "Promise<${1:T}>"
    ],
    "description": "promise snip"
  }
}
