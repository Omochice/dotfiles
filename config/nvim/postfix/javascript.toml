[[rules]]
regex = "from:\\(\\S\\+\\)"
template = "import {{__cursor__}} from \"{{__$1__}}\";"

[[rules]]
regex = "\\(\\S\\+\\)\\.echo"
template = "console.log({{__$1__}}){{__cursor__}}"

[[rules]]
regex = "\\(\\S\\+\\)\\.warn"
template = "console.warn({{__$1__}}){{__cursor__}}"

[[rules]]
regex = "\\(\\S\\+\\)\\.if"
template = """
if ({{__$1__}}) {
  {{__cursor__}}
}
"""

[[rules]]
regex = "\\(\\S\\+\\)\\.times"
template = """
for (let i = 0; i < {{__$1__}} ; i++) {
  {{__cursor__}}
}
"""

[[rules]]
regex = "\\(\\S\\+\\)\\.each"
template = """
for (const {{__cursor__}} of {{__$1__}}) {
}
"""

[[rules]]
regex = "\\(\\S\\+\\)\\.func"
template = """
{{__$1__}}() {
  {{__cursor__}}
}
"""

