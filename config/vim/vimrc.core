" user settings
syntax on
filetype plugin indent on
set autoindent
set autoread
set completeopt=menuone,noselect,preview
set expandtab
set hlsearch
set ignorecase
set incsearch
set infercase
set laststatus=2
set nobackup
set noswapfile
set noshowcmd " Use screenkey to show them
set nowrap
set nowritebackup
set number
set relativenumber
set shiftwidth=4
set showmatch
set smartindent
set softtabstop=4
set tabstop=4
set virtualedit=onemore
set wildmenu

if has('termguicolors')
    set termguicolors
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif

if has('nvim')
    let $NVIM_TUI_ENABLE_TRUE_COLOR = v:true
else
    set iminsert=2
    let &t_ti ..= "\e[1 q"
    let &t_SI ..= "\e[5 q"
    let &t_SR ..= "\e[3 q"
    let &t_EI ..= "\e[1 q"
    let &t_te ..= "\e[0 q"
endif

if (!has('nvim') || $DISPLAY !=# '') && has('clipboard')
  if has('unnamedplus')
     set clipboard& clipboard+=unnamedplus
  else
     set clipboard& clipboard+=unnamed
  endif
endif

" move cursor wigh hjkl in insert mode
inoremap <C-h> <Left>
" inoremap <C-j> <Down>
" inoremap <C-k> <Up>
inoremap <C-l> <Right>

" inoremap <expr> <C-j> pumvisible() ? '<C-n>' : '<Down>'
" inoremap <expr> <C-k> pumvisible() ? '<C-p>' : '<Up>'

" move UP/DOWN at fold context as same as displayed
nnoremap j gj
nnoremap k gk
xnoremap j gj
xnoremap k gk

" disable q:
nnoremap q: :<C-u>quit
nnoremap Q <Cmd>copen<CR>

" easy force write/quit
cnoreabbrev qq quit!
cnoreabbrev ww update!

" TODO
" cnoreabbrev w:q wq

" easy regex search
nnoremap / /\v

" dont use clipboard
nnoremap x "_x
nnoremap s "_s
nnoremap c "_c

" indent in insert mode
inoremap <Left> <C-d>
inoremap <Right> <C-t>
inoremap <Up> <nop>
inoremap <Down> <nop>

vnoremap J gj
vnoremap K gk

"" move visual block in visual mode
" vnoremap <silent> <C-K> "zx<Up>"zP`[V`]
" vnoremap <silent> <C-J> "zx"zp`[V`]

" " tmux win move
" nnoremap <C-q> h :<C-u>wincmd h<CR>
" nnoremap <C-q> j :<C-u>wincmd j<CR>
" nnoremap <C-q> k :<C-u>wincmd k<CR>
" nnoremap <C-q> l :<C-u>wincmd l<CR>

" from other resource, vim.jp etc..
nnoremap <silent> <ESC><ESC> <Cmd>nohlsearch<CR>
nnoremap <expr> 0 getline('.')[0 : col('.') - 2] =~# '^\s\+$' ? '0' : '^'
nnoremap Y y$
nnoremap <C-s> :<C-u>%s@\v@@g<Left><Left><Left>
vnoremap <C-s> :<C-u>'<,'>s@\v@@g<Left><Left><Left>

cnoremap <C-f> <Right>
cnoremap <C-b> <Left>
cnoremap <C-d> <Del>
cnoremap <C-a> <Home>
inoremap <expr> <C-a> getline('.')[0 : col('.') - 2] =~# '^\s\+$' ? '<C-o>0' : '<C-o>^'
noremap!        <C-e> <End>

" nnoremap + <C-a>
" nnoremap - <C-x>

" Automatically indent with i and A
nnoremap <expr> i len(getline('.')) ? 'i' : '"_cc'
nnoremap <expr> A len(getline('.')) ? 'A' : '"_cc'

" Commands
if has('nvim')
    " neovim terminal settings
    " make easy changing to terminal normal mode

    tnoremap <expr> <ESC> &filetype ==# 'floaterm' ? '<ESC>' : '<C-\><C-n>'
    tnoremap <C-w><C-w> <C-\><C-n><C-w><C-w>

    " feed insert mode when move terminal window
    autocmd TermOpen * startinsert
    autocmd WinEnter * if &buftype ==# 'terminal' | startinsert | endif
    " auto close
    " autocmd TermClose * call feedkeys('<CR>') " cannot work
    autocmd TermClose * call feedkeys("\<CR>")

    " helper commands
    command! Vterm vsplit | wincmd l | terminal
    command! Hterm split  | wincmd j | terminal
    command! Tterm tabnew | terminal
else
    " Vim terminal settings
    " make easy changing to terminal normal mode
    tnoremap <expr> <ESC> &filetype ==# 'floaterm' ? '<ESC>' : '<C-W>N'

    " helper commands
    command! Vterm vsplit | wincmd l | terminal ++curwin
    command! Hterm split  | wincmd j | terminal ++curwin
    command! Tterm tabnew | terminal ++curwin
endif

if !has('gui_running')
    set t_Co=256
    augroup term_vim_c_space
        autocmd!
        autocmd VimEnter * map <Nul> <C-Space>
        autocmd VimEnter * map! <Nul> <C-Space>
    augroup END
endif

" copy buffer command
command! CopyBuffer %y
